# .goreleaser.yml
# Visit https://goreleaser.com/intro/ for documentation
version: 2

# The project_name can be customized.
project_name: lightning-multitool

# before hooks run before the build. You can use them to run
# tasks like generating assets or running tests.
before:
  hooks:
    - go mod tidy

# build section defines how to build the binaries.
builds:
  - # The main Go file to build.
    main: ./cmd/server/main.go
    # The binary name.
    binary: lmt
    # GOOS and GOARCH to build for.
    goos:
      - linux
      - windows
      - darwin
      - freebsd
    goarch:
      - amd64
      - arm64
    # ldflags are used to strip debug information, making the binary smaller.
    ldflags:
      - -s -w

# archives section defines how to package the binaries.
archives:
  - # The name template for the archive.
    # This will create archives like: lightning-multitool_1.0.0_linux_amd64.tar.gz
    name_template: "{{ .ProjectName }}-v{{ .Version }}-{{ .Os }}-{{ .Arch }}"
    # Files to include in the archive.
    files:
      - LICENSE
      - README.md

# checksum section generates a checksums file for the artifacts.
checksum:
  name_template: 'checksums.txt'

# changelog section generates a changelog for the release.
changelog:
  sort: asc
  filters:
    # Exclude commit messages that match these regexps.
    exclude:
      - '^docs:'
      - '^test:'
